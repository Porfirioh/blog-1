<?php//// Контроллер страницы чтения.//class C_Articles extends C_Base{	private $model;    private $comments_model;    private $users_model;    function __construct()    {        parent::__construct();        $this->model = M_Articles::instance();        $this->comments_model = M_Comments::instance();        $this->users_model = M_Users::instance();    }	public function action_index(){		$articles_per_page = 3;		$page = isset($_GET['page']) ? (int)$_GET['page'] : 1;		$skip = ($page-1) * $articles_per_page;		$pages = ceil($this->model->getNumberOfRecords() / $articles_per_page);		$articles = $this->model->getRecordsAsPreview($articles_per_page, $skip);        if ($this->logged_user != null){            $this->menu = array('Управление статьями' => 'index.php?act=show_editor' );        }        $this->blocks['Свежие записи'] = $this->getLatestArticles(3, $page);        $this->blocks['Свежие комментарии'] = $this->getLatestComments(3, $page);        $this->content = $this->template('v/v_articles.php', array('page' => $page, 'pages' => $pages, 'articles' => $articles));	}	public function action_read(){		$id = $_REQUEST['id'];		$article = $this->model->getRecord($id);		//если статьи с заданным id нет, уходим к списку статей		if (count($article) == 0){			header('Location: index.php');			exit();		}        if (isset($_POST['author']) && isset($_POST['content'])){            if (($_POST['author'] != '') && ($_POST['content'] != '')){                $this->comments_model->addRecord($_POST['author'], $_POST['content'], $id);            }        }        $comments = $this->comments_model->getAllRecords($id);		$article = $article[0];		//Страница, с которой пришли		$page = isset($_REQUEST['page']) ? (int) $_REQUEST['page'] : 1;        $this->menu = array('К списку статей' => "index.php?page=$page");        $this->blocks['Свежие записи'] = $this->getLatestArticles(3, $page);;        $this->blocks['Свежие комментарии'] = $this->getLatestComments(3, $page);		$this->content = $this->template('v/v_article.php', array('page' => $page, 'article' => $article,                                                                  'article_id' => $id, 'comments' => $comments,                                                                  'logged_user' => $this->logged_user ));	}		public function action_show_editor(){		$this->title = 'Редактор статей';        if ($this->users_model->can(M_Users::ADD)){            $this->menu = array('Добавить статью' => 'index.php?act=add',                                'На главную' => 'index.php');        } else{            $this->menu = array('На главную' => 'index.php');        }        if ($this->users_model->can(M_Users::MANAGE_ALL)){		    $articles = $this->model->getAllRecords();        } else {            $articles = $this->model->getUserRecords($this->users_model->getID());        }		$this->content = $this->template('v/v_edit_articles.php', array('articles' => $articles));	}	public function action_edit(){						if (isset($_POST['title']) && isset($_POST['content']) && isset($_GET['id'])){			if ($_POST['title'] != "" && $_POST['content'] != ""){                if (!$this->model->editRecord($_GET['id'], $_POST['title'], $_POST['content'])){					//фиксируем ошибку				}			}				header('Location: index.php?act=show_editor');			exit();		}				//Если не пришел id статьи, перенаправляем пользователя к админке		if (!isset($_GET['id'])){			header('Location: index.php?act=show_editor');			exit();			}        $this->menu = array('К редактору статей' => "index.php?act=show_editor");		$this->title = 'Редактирование статьи';		$article = $this->model->getRecord($_GET['id']);		$this->content = $this->template('v/v_edit_article.php', array('article_title' => $article[0]['title'],														  			   'article_content' => $article[0]['content'],														               'article_id' => (int) $_GET['id']));;			}	public function action_delete(){		if (isset($_GET['id'])) {				if (!$this->model->deleteRecord($_GET['id'])){				//фиксируем ошибку			}			} 		header('Location: index.php?act=show_editor');		}	public function action_add(){        $user_id = $this->users_model->getID();		if (isset($_POST['title']) && isset($_POST['content']) && $user_id != null){			if ($_POST['title'] != "" && $_POST['content'] != ""){				if (!$this->model->addRecord($_POST['title'], $_POST['content'], $user_id)){					//фиксируем ошибку				}			}				header('Location: index.php?act=show_editor');			exit();		}        $this->menu = array('К редактору статей' => "index.php?act=show_editor");		$this->title = 'Новая статья';		$this->content = $this->template('v/v_add_article.php', array());	}    //help functions    private function getLatestArticles($number, $page)    {        $latest = array();        foreach ($this->model->getLastRecords($number) as $obj){            $latest[] = array('link' => 'index.php?act=read&id='.$obj['id'].'&page='.$page, 'title' => $obj['title']);        }        return $latest;    }    private function getLatestComments($number, $page)    {        $latest = array();        foreach ($this->comments_model->getLastRecords($number) as $obj){            $latest[] = array('link' => 'index.php?act=read&id='.$obj['article_id'].'&page='.$page, 'title' => $obj['author'].': '.mb_substr($obj['content'], 0, 10).'...');        }        return $latest;    }}